// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model IrrigationSchedule {
  id          Int      @id @default(autoincrement())
  startTime   DateTime
  duration    Int      // in minutes
  frequency   String   // daily, weekly, etc.
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("irrigation_schedules")
}

enum SensorType {
  MOISTURE
  TEMPERATURE
  HUMIDITY
  PH
  NUTRIENT
  WATER_FLOW
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
} 

model MoistureReading {
  id         Int      @id @default(autoincrement())
  farmer_id  Int
  section_id Int
  value      Float
  timestamp  DateTime @default(now())

  @@map("moisture_readings")
}

model IrrigationEvent {
  id         Int      @id @default(autoincrement())
  farmer_id  Int
  section_id Int
  water_ml   Float
  start_time DateTime
  end_time   DateTime

  @@map("irrigation_events")
}

model DeviceStatus {
  id          Int      @id @default(autoincrement())
  device_id   String?
  farmer_id   Int
  section_id  Int
  status_json Json
  timestamp   DateTime @default(now())

  @@map("device_status")
}

model DeviceAck {
  id         Int      @id @default(autoincrement())
  device_id  String?
  farmer_id  Int
  section_id Int
  ack_json   Json
  timestamp  DateTime @default(now())

  @@map("device_acks")
}
